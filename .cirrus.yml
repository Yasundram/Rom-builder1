env: # Environment variables to pass to all tasks
    CIRRUS_CLONE_DEPTH: 1
    CIRRUS_WORKING_DIR: "/tmp/ci"

    rclone_config: "ENCRYPTED[58fe878a01da727d9d753c2c36a81abb2c8fc23e7d85017625b11adeeeeb862e26081f6594e4e7e1964633e63be3a4c0]"

task:
    name: descendant
    timeout_in: 120m
    container:
      image: apon77/aosp:latest
      cpu: 4
      memory: 16G
    download_ccache_background_script:
      - set -evx
      - command=$(head /tmp/ci/ccache.sh -n $(expr $(grep upload /tmp/ci/ccache.sh -n | cut -f1 -d:) - 1))
      - bash -c "$command"
    sync_script:
      - set -evx
      - command=$(head /tmp/ci/build.sh -n $(expr $(grep "# build" /tmp/ci/build.sh -n | cut -f1 -d:) - 1))
      - bash -c "$command"
    monitor_background_script:
      - ./monitor
    build_script:
      - set -evx
      - command=$(tail /tmp/ci/build.sh -n +$(expr $(grep "# build" /tmp/ci/build.sh -n | cut -f1 -d:) + 2) | head -n -16)
      - bash -c "$command"
    upload_rom_script:
      - set -evx
      - command=$(tail /tmp/ci/build.sh -n +$(expr $(grep "# upload" /tmp/ci/build.sh -n | cut -f1 -d:) + 2))
      - bash -c "$command"
    upload_ccache_script:
      - set -evx
      - command=$(tail /tmp/ci/ccache.sh -n +$(expr $(grep "# upload" /tmp/ci/ccache.sh -n | cut -f1 -d:) + 2))
      - bash -c "$command"

